#BlueJ class context
comment0.target=Grid
comment0.text=\r\n\ Representa\ uma\ grelha\ onde\ estar\u00E3o\ os\ outros\ objetos\r\n\r\n\ @author\ 202200196\r\n\ @author\ 202200215\r\n\r\n\ @version\ 1.0\r\n
comment1.params=maximumX\ maximumY
comment1.target=Grid(int,\ int)
comment1.text=\r\n\r\n\ @param\ maximumX\ X\ M\u00E1ximo\r\n\ @param\ maximumY\ Y\ M\u00E1ximo\r\n
comment10.params=positionable
comment10.target=boolean\ containsPositionable(Positionable)
comment10.text=\r\n\ Verifica\ se\ o\ objeto\ fornecido\ existe\ na\ grelha\r\n\ @param\ positionable\ Positionable\ a\ testar\r\n\ @return\ Verdadeiro\ se\ o\ objeto\ existe\ na\ grelha\r\n
comment11.params=positionable
comment11.target=Vector\ getPosition(Positionable)
comment11.text=\r\n\ Retorna\ o\ vetor\ da\ posi\u00E7\u00E3o\ do\ objeto\ fornecido\ caso\ este\ exista\r\n\ @param\ positionable\ Positionable\ a\ obter\r\n\ @return\ Vetor\ de\ posi\u00E7\u00E3o\ do\ objeto,\ caso\ n\u00E3o\ exista,\ retorna\ null\r\n
comment12.params=positionable
comment12.target=java.util.ArrayList\ getPositions(Positionable)
comment12.text=\r\n\ Retorna\ os\ vetores\ das\ posi\u00E7\u00F5es\ do\ objeto\ fornecido\ caso\ este\ exista\r\n\ @param\ positionable\ Positionable\ a\ obter\r\n\ @return\ ArrayList\ dos\ vetores\ de\ posi\u00E7\u00E3o\ do\ objeto,\ caso\ n\u00E3o\ exista,\ retorna\ null\r\n
comment13.params=positionable
comment13.target=boolean\ removePositionable(Positionable)
comment13.text=\r\n\ Tenta\ remover\ da\ grelha\ o\ objeto\ fornecido\r\n\ @param\ positionable\ Positionable\ a\ remover\r\n\ @return\ Verdadeiro\ se\ o\ objeto\ existia\ e\ foi\ removido\r\n
comment14.params=positionable\ position
comment14.target=boolean\ movePositionable(Positionable,\ Vector)
comment14.text=\r\n\ Tenta\ mover\ um\ objeto\ de\ posi\u00E7\u00E3o\r\n\ @param\ positionable\ Positionable\ a\ mover\r\n\ @param\ position\ Posi\u00E7\u00E3o\ nova\r\n\ @return\ Verdadeiro\ se\ o\ objeto\ existia\ na\ grelha,\ a\ posi\u00E7\u00E3o\ fornecida\ estava\ livre\ e\ foi\ movido\ com\ sucesso\r\n
comment15.params=startPosition\ endPosition
comment15.target=java.util.ArrayList\ getPath(Vector,\ Vector)
comment15.text=\r\n\ Tenta\ obter\ um\ caminho\ do\ ponto\ inicial\ at\u00E9\ ao\ final\r\n\ @param\ startPosition\ Posi\u00E7\u00E3o\ de\ partida\r\n\ @param\ endPosition\ Posi\u00E7\u00E3o\ de\ chegada\r\n\ @return\ ArrayList\ de\ Vetor,\ caso\ exista\ um\ caminho\ v\u00E1lido,\ caso\ contr\u00E1rio\ retorna\ null\r\n
comment16.params=startPosition\ endPosition\ occupiedPositions
comment16.target=java.util.ArrayList\ getPathWithSensorInfo(Vector,\ Vector,\ java.util.ArrayList)
comment16.text=\r\n\ Tenta\ obter\ um\ caminho\ do\ ponto\ inicial\ at\u00E9\ ao\ final\ fornecida\ informa\u00E7\u00E3o\ de\ obst\u00E1culos\r\n\ @param\ startPosition\ Posi\u00E7\u00E3o\ de\ partida\r\n\ @param\ endPosition\ Posi\u00E7\u00E3o\ de\ chegada\r\n\ @param\ occupiedPositions\ Posi\u00E7\u00F5es\ ocupadas\r\n\ @return\ ArrayList\ de\ Vetor,\ caso\ exista\ um\ caminho\ v\u00E1lido,\ caso\ contr\u00E1rio\ retorna\ null\r\n
comment2.params=
comment2.target=Area\ getUsableArea()
comment2.text=\r\n\ Obter\ \u00E1rea\ utiliz\u00E1vel\r\n\ @return\ \u00C1rea\ utiliz\u00E1vel\r\n
comment3.params=
comment3.target=Area\ getWallArea()
comment3.text=\r\n\ Obter\ \u00E1rea\ da\ parede\r\n\ @return\ \u00C1rea\ de\ parede\r\n
comment4.params=warehouse
comment4.target=boolean\ setWarehouse(Warehouse)
comment4.text=\r\n\ Define\ o\ armaz\u00E9m\ a\ que\ pertence,\ apenas\ permite\ que\ seja\ executado\ uma\ vez\r\n\ @param\ warehouse\ Warehouse\ a\ definir\r\n\ @return\ Verdadeiro\ se\ o\ armaz\u00E9m\ foi\ definido\r\n
comment5.params=
comment5.target=Warehouse\ getWarehouse()
comment5.text=\r\n\ Retorna\ o\ armaz\u00E9m\ a\ que\ pertence\r\n\ @return\ Armaz\u00E9m\ a\ que\ pertence\r\n
comment6.params=position
comment6.target=boolean\ isValidUsable(Vector)
comment6.text=\r\n\ Verifica\ se\ a\ posi\u00E7\u00E3o\ fornecida\ est\u00E1\ dentro\ da\ \u00E1rea\ v\u00E1lida\ do\ armaz\u00E9m\r\n\ @param\ position\ Posi\u00E7\u00E3o\ a\ testar\r\n\ @return\ Verdadeiro\ se\ a\ posi\u00E7\u00E3o\ \u00E9\ v\u00E1lida\ dentro\ do\ armaz\u00E9m\r\n
comment7.params=position
comment7.target=boolean\ isOccupied(Vector)
comment7.text=\r\n\ Verifica\ se\ a\ posi\u00E7\u00E3o\ fornecida\ est\u00E1\ ocupada\r\n\ @param\ position\ Posi\u00E7\u00E3o\ a\ testar\r\n\ @return\ Verdadeiro\ se\ a\ posi\u00E7\u00E3o\ est\u00E1\ ocupada\r\n
comment8.params=position
comment8.target=Positionable\ getPositionable(Vector)
comment8.text=\r\n\ Retorna\ o\ objeto\ que\ est\u00E1\ na\ posi\u00E7\u00E3o\ fornecida\r\n\ @param\ position\ Posi\u00E7\u00E3o\ a\ obter\r\n\ @return\ Objeto\ que\ est\u00E1\ na\ posi\u00E7\u00E3o\ fornecida,\ caso\ exista,\ caso\ contr\u00E1rio\ retorna\ null\r\n
comment9.params=positionable\ position
comment9.target=boolean\ addPositionable(Positionable,\ Vector)
comment9.text=\r\n\ Tenta\ adicionar\ um\ objeto\ \u00E0\ grelha\ na\ posi\u00E7\u00E3o\ fornecida\r\n\ @param\ positionable\ Positionable\ a\ adicionar\r\n\ @param\ position\ Posi\u00E7\u00E3o\ a\ preencher\r\n\ @return\ Verdadeiro\ se\ o\ objeto\ foi\ adicionado\ \u00E0\ grelha\r\n
numComments=17
